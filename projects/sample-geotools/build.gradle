//-------------------------------------------------------------------------------------------------
// PLUGINS.
//-------------------------------------------------------------------------------------------------

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.ext.kotlinVersion}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${project.ext.dokkaVersion}"
    }
}

apply(plugin: "kotlin")
apply(plugin: "org.jetbrains.dokka")

//-------------------------------------------------------------------------------------------------
// SOURCE SETS.
//-------------------------------------------------------------------------------------------------

sourceSets {
    main {
        java.srcDirs = ["src"]
        kotlin.srcDirs = ["src"]
        resources.srcDirs = ["src"]
    }
    test {
        java.srcDirs = ["test"]
        kotlin.srcDirs = ["test"]
        resources.srcDirs = ["test"]
    }
}

//-------------------------------------------------------------------------------------------------
// REPOSITORIES.
//-------------------------------------------------------------------------------------------------

repositories {
    // use local maven repository.
    if (project.hasProperty("maven.local")) {
        mavenLocal()
    }

    // repository for geotools (this must be before other remote repositories).
    maven { name "osgeo.org"; url "http://download.osgeo.org/webdav/geotools/" }

    // central repositories that host most dependencies.
    jcenter()
    mavenCentral()
}

//-------------------------------------------------------------------------------------------------
// DEPENDENCIES.
//-------------------------------------------------------------------------------------------------

// main source dependencies.
dependencies {
    // kotlin standard library.
    compile "org.jetbrains.kotlin:kotlin-stdlib:${project.ext.kotlinVersion}"

    // dependencies for the samples.
    compile "org.geotools:gt-main:${project.ext.geotoolsVersion}"
    compile "org.geotools:gt-data:${project.ext.geotoolsVersion}"
    compile "org.geotools:gt-shapefile:${project.ext.geotoolsVersion}"
    compile "org.geotools:gt-geojson:${project.ext.geotoolsVersion}"
}

// test source dependencies.
dependencies {
    // test frameworks and libraries.
    testCompile "io.damo.kspec:kspec:1.2.1"
    testCompile "com.winterbe:expekt:0.2.0"
    testCompile "com.nhaarman:mockito-kotlin:0.4.1"
}

//-------------------------------------------------------------------------------------------------
// CONFIGURATION.
//-------------------------------------------------------------------------------------------------

dokka {
    outputFormat = "javadoc"
}

kapt {
    generateStubs = true
}

